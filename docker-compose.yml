version: "3.7"

services:
  rabbitmq:
    build:
      context: catalogService/deploy/docker/rabbit
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - gigatest
  catalog_db:
    image: "postgres:15.2-alpine"
    restart: unless-stopped
    environment:
      POSTGRES_DB: "catalog_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "qqqwwweee12321"
    ports:
      - 5433:5432
    networks:
      - gigatest
    volumes:
      - 'pg:/var/lib/postgresql/data'
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1G"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER $$POSTGRES_DB"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
  order_db:
    image: "postgres:15.2-alpine"
    restart: unless-stopped
    environment:
      POSTGRES_DB: "order_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    ports:
      - 5432:5432
    volumes:
      - 'pg:/var/lib/postgresql/data'
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1G"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER $$POSTGRES_DB"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - gigatest
  goauth:
    build:
      context: .
      dockerfile: "authService/deploy/docker/Dockerfile"
    restart: unless-stopped
    ports:
      - 8081:8082
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1G"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://keycloak.teneshag.ru/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - gigatest
  catalog_gateway:
    build:
      context: .
      dockerfile: catalogService/deploy/docker/Dockerfile
    restart: unless-stopped
    ports:
      - 8079:8082
    command: [ "/gateapp", "start" ]
    depends_on:
      - rabbitmq
      - catalog_db
    networks:
      - gigatest
    volumes:
      - catalog-cache:/go/pkg/mod
  catalog_core:
    build:
      context: .
      dockerfile: catalogService/deploy/docker/Dockerfile
    restart: unless-stopped
    ports:
      - 8083:8083
    command: [ "/coreapp", "start" ]
    depends_on:
      - rabbitmq
      - catalog_db
    networks:
      - gigatest
  order_gateway:
    build:
      context: .
      dockerfile: orderService/deploy/docker/Dockerfile
    restart: unless-stopped
    ports:
      - 8084:8082
    command: [ "/gateapp", "start" ]
    depends_on:
      - rabbitmq
      - order_db
    networks:
      - gigatest
  order_core:
    build:
      context: .
      dockerfile: orderService/deploy/docker/Dockerfile
    restart: unless-stopped
    ports:
      - 8085:8083
    command: [ "/coreapp", "start" ]
    depends_on:
      - rabbitmq
      - order_db
    networks:
      - gigatest

volumes:
  pg:
  catalog-cache:


networks:
  gigatest: